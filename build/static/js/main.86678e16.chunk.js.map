{"version":3,"sources":["components/Header.jsx","components/button.jsx","components/Main.jsx","components/Map.jsx","client-config.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","includes","TextInput","props","value","onChange","event","console","log","Main","state","Geocode","setApiKey","LocationPin","text","icon","mapMarker","Map","location","zoomLevel","bootstrapURLKeys","key","GoogleMapsAPI","libraries","defaultCenter","defaultZoom","lat","lng","address","Footer","href","target","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yXAaeA,E,4JATX,WACI,OACI,qBAAKC,UAAU,SAAf,SACI,wCAAU,mBAAGA,UAAU,yB,GAJlBC,aCAfC,G,MAAS,CACX,YACA,gBAGEC,EAAQ,CACV,cACA,cAoBWC,EAjBA,SAAC,GAMT,IALHC,EAKE,EALFA,SACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,YACAC,EACE,EADFA,WAEyBP,EAAOQ,SAASF,IAA6BN,EAAO,GACrDC,EAAMO,SAASD,IAA2BN,EAAM,GAExE,OACI,wBAAQH,UAAS,6CAAgDO,QAASA,EAASD,KAAMA,EAAzF,SACKD,KCrBPM,G,MAAY,SAAAC,GACd,OACE,8BACE,uBACEN,KAAK,OACLO,MAAOD,EAAMC,MACbC,SAAU,SAAAC,GAAK,OAAIC,QAAQC,IAAI,yBA+B1BC,E,4MAvBXC,MAAQ,G,4CACR,WACI,OACI,sBAAKnB,UAAU,OAAf,UACI,mBAAGA,UAAU,OAAb,mHACA,mDAEI,cAAC,EAAD,OAEJ,uBACA,gDAEI,cAAC,EAAD,OAEJ,uBACA,cAAC,EAAD,oBACA,uBACA,mBAAGA,UAAU,OAAb,8C,GAlBGC,a,+CCTnBmB,IAAQC,UCRqB,KDW7B,IAAMC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,sBAAKvB,UAAU,MAAf,UACE,cAAC,OAAD,CAAMwB,KAAMC,IAAWzB,UAAU,aACjC,mBAAGA,UAAU,WAAb,SAAyBuB,QAsBdG,EAlBH,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAb,OACV,qBAAK5B,UAAU,MAAf,SACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CACE6B,iBAAkB,CAAEC,IAAK,CAACC,cCtBL,KDsBqBC,UAAW,UACrDC,cAAeN,EACfO,YAAaN,EAHf,SAKE,cAAC,EAAD,CACEO,IAAKR,EAASQ,IACdC,IAAKT,EAASS,IACdb,KAAMI,EAASU,iBEVVC,G,kKAfX,WACI,OACI,sBAAKtC,UAAU,SAAf,UACI,wCAAU,mBAAGA,UAAU,mBACvB,iGACA,mBAAIuC,KAAK,0CACLC,OAAO,SACPC,IAAI,sBAFR,SAGI,mBAAGzC,UAAU,2B,GATZC,cCIf0B,EAAW,CACfU,QAAS,wCACTF,IAAK,kBACLC,KAAM,oBAcOM,MAXf,WACE,OACE,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAY2B,SAAUA,EAAUC,UAAW,KAC3C,cAAC,EAAD,QCPSe,EAZO,SAAAC,GAChBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.86678e16.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"Header\">\r\n                <h1>EcoMap<i className=\"fas fa-leaf\"></i></h1>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React from 'react';\r\nimport './button.css';\r\n\r\nconst STYLES = [\r\n    'btn--main',\r\n    'btn--border'\r\n]\r\n\r\nconst SIZES = [\r\n    'btn--medium',\r\n    'btn--large'\r\n]\r\n\r\nconst Button = ({\r\n    children,\r\n    type,\r\n    onClick,\r\n    buttonStyle,\r\n    buttonSize\r\n}) => {\r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\r\n\r\n    return (\r\n        <button className={`btn $(checkButtonStyle) $(checkButtonSize)`} onClick={onClick} type={type}>\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from './button.jsx';\r\nimport './Main.css';\r\n\r\nconst TextInput = props => {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={props.value}\r\n          onChange={event => console.log(\"value changed!\")}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\nclass Main extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div className=\"Main\">\r\n                <p className=\"text\">Enter a start location and destination to get the carbon emissions from the determined driving route.</p>\r\n                <label>\r\n                    Start Location\r\n                    <TextInput />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Destination\r\n                    <TextInput />\r\n                </label>\r\n                <br />\r\n                <Button>Start</Button>\r\n                <br />\r\n                <p className=\"text\">Route emissions (kg CO2):</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport mapMarker from '@iconify-icons/el/map-marker';\r\nimport Geocode from \"react-geocode\";\r\nimport { GoogleMapsAPI } from '../client-config';\r\nimport './map.css'\r\n\r\nGeocode.setApiKey( GoogleMapsAPI );\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n  <div className=\"pin\">\r\n    <Icon icon={mapMarker} className=\"pin-icon\" />\r\n    <p className=\"pin-text\">{text}</p>\r\n  </div>\r\n)\r\n\r\nconst Map = ({ location, zoomLevel }) => (\r\n  <div className=\"map\">\r\n    <div className=\"google-map\">\r\n      <GoogleMapReact\r\n        bootstrapURLKeys={{ key: {GoogleMapsAPI}, libraries: 'places' }}\r\n        defaultCenter={location}\r\n        defaultZoom={zoomLevel}\r\n      >\r\n        <LocationPin\r\n          lat={location.lat}\r\n          lng={location.lng}\r\n          text={location.address}\r\n        />\r\n      </GoogleMapReact>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Map","export const GoogleMapsAPI = ' ';\r\n","import React, { Component } from 'react';\r\nimport './Footer.css';\r\n\r\nclass Footer extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"Footer\">\r\n                <h4>EcoMap<i className=\"fas fa-leaf\"></i></h4>\r\n                <h5>Created by Grace Manning, Kaitlyn Suzuki, and Mignon April Lee.</h5>\r\n                <a  href=\"https://github.com/gracebmanning/EcoMap\"\r\n                    target=\"_blank\"\r\n                    rel=\"noreferrer noopener\">\r\n                    <i className=\"fab fa-github\"></i>\r\n                </a>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React from 'react'\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Main from './components/Main';\r\nimport MapSection from './components/Map';\r\nimport Footer from './components/Footer';\r\n\r\nconst location = {\r\n  address: '4255 Campus Dr A150, Irvine, CA 92612',\r\n  lat: 33.64975774095616,\r\n  lng: -117.83861606629371,\r\n} //idk getting other location yet\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Header />\r\n        <Main />\r\n        <MapSection location={location} zoomLevel={17} />\r\n        <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n        getCLS(onPerfEntry);\r\n        getFID(onPerfEntry);\r\n        getFCP(onPerfEntry);\r\n        getLCP(onPerfEntry);\r\n        getTTFB(onPerfEntry);\r\n      });\r\n    }\r\n  };\r\n  \r\n  export default reportWebVitals;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './bootstrap-dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}